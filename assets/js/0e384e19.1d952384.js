"use strict";(self.webpackChunklog_express_documentation=self.webpackChunklog_express_documentation||[]).push([[976],{619:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>g,frontMatter:()=>o,metadata:()=>t,toc:()=>a});var i=s(4848),l=s(8453);const o={sidebar_position:1},r="Introduction to Log-Express",t={id:"intro",title:"Introduction to Log-Express",description:"Welcome to Log-Express, a powerful and customizable logging middleware designed for Express.js applications. Whether you're building a small project or a large-scale application, Log-Express provides an efficient and flexible solution for logging API requests.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/log-express/docs/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar"},d={},a=[{value:"Key Features",id:"key-features",level:2},{value:"Why Use Log-Express?",id:"why-use-log-express",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Configuration Options",id:"configuration-options",level:3},{value:"Example Logs",id:"example-logs",level:2},{value:"Logging Levels",id:"logging-levels",level:3},{value:"Customization and Flexibility",id:"customization-and-flexibility",level:2},{value:"Best Practices",id:"best-practices",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"introduction-to-log-express",children:"Introduction to Log-Express"})}),"\n",(0,i.jsxs)(n.p,{children:["Welcome to ",(0,i.jsx)(n.strong,{children:"Log-Express"}),", a powerful and customizable logging middleware designed for Express.js applications. Whether you're building a small project or a large-scale application, Log-Express provides an efficient and flexible solution for logging API requests."]}),"\n",(0,i.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Customizable Log Levels"}),": Control the verbosity of your logs with log levels like ",(0,i.jsx)(n.code,{children:"trace"}),", ",(0,i.jsx)(n.code,{children:"debug"}),", ",(0,i.jsx)(n.code,{children:"info"}),", ",(0,i.jsx)(n.code,{children:"warn"}),", ",(0,i.jsx)(n.code,{children:"error"}),", and ",(0,i.jsx)(n.code,{children:"fatal"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Console and File Logging"}),": Log messages can be printed to the console, saved to log files, or both."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Daily Log Rotation"}),": Optionally split log files by day for easier organization."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Intelligent Request Logging"}),": Automatically log HTTP methods, URLs, status codes, response times, and client IPs."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Minimal Setup"}),": Log-Express is easy to integrate with any Express.js application, requiring minimal configuration to get started."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"why-use-log-express",children:"Why Use Log-Express?"}),"\n",(0,i.jsx)(n.p,{children:"Effective logging is crucial for monitoring and debugging Express applications, and Log-Express simplifies this process by offering:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Granular Control"}),": Define what gets logged based on log levels and routes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Multi-Destination Logging"}),": Choose where to log\u2014either to files, the console, or both."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scalable for Projects"}),": Suitable for both development and production environments."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.p,{children:["To install ",(0,i.jsx)(n.strong,{children:"Log-Express"}),", simply run:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install log-express\n"})}),"\n",(0,i.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(n.p,{children:"Below is a simple example of how to integrate Log-Express into your Express application:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'const express = require("express");\nconst logExpress = require("log-express");\n\nconst app = express();\n\n// Middleware configuration\napp.use(\n  logExpress({\n    logLevel: "info", // Set log level (default: \'info\')\n    consoleLog: true, // Enable console logging (default: true)\n    saveLogs: true, // Enable file logging (default: false)\n    logPerDay: true, // Split logs by day (default: false)\n  })\n);\n\n// Dummy API endpoints\n\napp.get("/", (req, res) => {\n  res.send("Hello, world!");\n});\n\napp.get("/api/users", (req, res) => {\n  res.send("Hello, users!");\n});\n\napp.listen(3000, () => {\n  console.log("Server running on port 3000");\n});\n'})}),"\n",(0,i.jsx)(n.h3,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,i.jsx)(n.p,{children:"Log-Express provides several configuration options to tailor logging to your specific needs:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"logLevel"})}),": Define the minimum log level (",(0,i.jsx)(n.code,{children:"trace"}),", ",(0,i.jsx)(n.code,{children:"debug"}),", ",(0,i.jsx)(n.code,{children:"info"}),", ",(0,i.jsx)(n.code,{children:"warn"}),", ",(0,i.jsx)(n.code,{children:"error"}),", ",(0,i.jsx)(n.code,{children:"fatal"}),"). Logs with a level below this threshold will be ignored.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Default: ",(0,i.jsx)(n.code,{children:'"info"'})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"consoleLog"})}),": Enable or disable logging to the console.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Default: ",(0,i.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"saveLogs"})}),": Enable saving logs to a file. Log files are stored in a ",(0,i.jsx)(n.code,{children:"logs"})," directory at the project\u2019s root.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Default: ",(0,i.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"logPerDay"})}),": If enabled, logs will be split into daily files with filenames in the format ",(0,i.jsx)(n.code,{children:"system-YYYY-MM-DD.logs"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Default: ",(0,i.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-logs",children:"Example Logs"}),"\n",(0,i.jsx)(n.p,{children:"When using Log-Express, your logs will look like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"2024-09-18 14:32:07 [INFO]: GET /api/users 200 23ms - 192.168.1.1\n2024-09-18 14:33:10 [WARN]: GET /api/orders 404 15ms - 192.168.1.2\n2024-09-18 14:34:02 [ERROR]: POST /api/auth 500 45ms - 192.168.1.3\n2024-09-18 14:35:45 [INFO]: PUT /api/products/123 204 34ms - 192.168.1.4\n"})}),"\n",(0,i.jsx)(n.h3,{id:"logging-levels",children:"Logging Levels"}),"\n",(0,i.jsx)(n.p,{children:"Log-Express supports the following logging levels, which allow you to filter logs based on the severity of events:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"trace"})}),": Detailed information useful for debugging."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"debug"})}),": Debugging information."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"info"})}),": Informational messages indicating normal operation"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"warn"})}),": Warnings that indicate potential issues but do not stop the execution of your application."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"error"})}),": Errors that prevent part of your application from functioning correctly."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"fatal"})}),": Critical issues that may cause the application to crash."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"off"})}),": No logging will take place at this level."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"customization-and-flexibility",children:"Customization and Flexibility"}),"\n",(0,i.jsx)(n.p,{children:"Log-Express provides the ability to customize the log format and logging behavior to fit your application's needs. You can easily configure it to log important request data such as:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"HTTP Methods"}),": ",(0,i.jsx)(n.code,{children:"GET"}),", ",(0,i.jsx)(n.code,{children:"POST"}),", ",(0,i.jsx)(n.code,{children:"PUT"}),", ",(0,i.jsx)(n.code,{children:"DELETE"}),", etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response Status Codes"}),": Success, client errors, server errors."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response Time"}),": Duration of the request, measured in milliseconds."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Client IP Address"}),": The origin IP of the request."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"These details make it easier to track how your API is being used and detect issues early on."}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Log Levels in Production"}),": In production environments, it's generally best to log at the ",(0,i.jsx)(n.code,{children:"info"})," level or higher (e.g., ",(0,i.jsx)(n.code,{children:"warn"}),", ",(0,i.jsx)(n.code,{children:"error"}),") to reduce verbosity and focus on important events."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Log Rotation"}),": Enabling ",(0,i.jsx)(n.code,{children:"logPerDay"})," ensures that your log files are manageable and easy to navigate. This is especially helpful for long-running applications."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitoring Tools"}),": Combine Log-Express with monitoring tools to gain deeper insights into your application\u2019s performance and behavior."]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);